<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on Chi-Chi Simon</title>
    <link>https://JonathanSimon123.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on Chi-Chi Simon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2018</copyright>
    <lastBuildDate>Mon, 25 Dec 2017 23:33:48 +0800</lastBuildDate>
    
	<atom:link href="https://JonathanSimon123.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>行为型模式</title>
      <link>https://JonathanSimon123.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 25 Dec 2017 23:33:48 +0800</pubDate>
      
      <guid>https://JonathanSimon123.github.io/%E8%A1%8C%E4%B8%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;h4 id=&#34;中介者模式&#34;&gt;中介者模式&lt;/h4&gt;

&lt;p&gt;中介者模式封装对象之间互交，使依赖变的简单，并且使复杂互交简单化，封装在中介者中。&lt;/p&gt;

&lt;p&gt;例子中的中介者使用单例模式生成中介者。&lt;/p&gt;

&lt;p&gt;中介者的change使用switch判断类型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>创建者模式</title>
      <link>https://JonathanSimon123.github.io/%E5%88%9B%E5%BB%BA%E8%80%85%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 20 Dec 2017 20:23:04 +0800</pubDate>
      
      <guid>https://JonathanSimon123.github.io/%E5%88%9B%E5%BB%BA%E8%80%85%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;h4 id=&#34;golang-简单工厂模式&#34;&gt;golang 简单工厂模式&lt;/h4&gt;

&lt;p&gt;go 语言没有构造函数一说，所以一般会定义NewXXX函数来初始化相关类。 NewXXX 函数返回接口时就是简单工厂模式，也就是说Golang的一般推荐做法就是简单工厂。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>